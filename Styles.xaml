<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Business_System_Laboration_4">

    <!--#region Button Styles -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="#F5F9F9"/>
        <Setter Property="Background" Value="#80a0a2"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Button" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Button" Property="Background" Value="#EDAB2C"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Button" Property="Background" Value="#a5c1c3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PurchaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Background" Value="#80a0a2"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ToolTip" Value="Lägg till vara"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Button" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <Label x:Name="PriceTextBlock" Content="{TemplateBinding Content}" ContentStringFormat=" {0:C}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Button" Property="Background" Value="#7bae45"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Button" Property="Background" Value="#d8e3e3"/>
                            <Setter TargetName="PriceTextBlock" Property="Content" Value="Slutsåld"/>
                            <Setter TargetName="PriceTextBlock" Property="Foreground" Value="#A0A0A0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="PriceTextBlock" Property="Foreground" Value="#F5F9F9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#170e39"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ToolTip" Value="Ta bort vara"/>
        <Setter Property="Command" Value="{Binding DataContext.RemoveItemFromCart, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Button" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20">
                        <Label x:Name="RemoveTextBlock" Content="X" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0" Foreground="#170e39"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RemoveTextBlock" Property="Foreground" Value="#CD4954"/>
                            <Setter TargetName="Button" Property="BorderBrush" Value="#CD4954"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tab Items and Controls -->
    <Style x:Key="TabStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="#d8e3e3"/>
        <Setter Property="BorderBrush" Value="#d8e3e3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="#d8e3e3" CornerRadius="4,4,0,0" Margin="2,0">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#d8e3e3" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#F5F9F9" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#F5F9F9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="#d8e3e3"/>
        <Setter Property="BorderBrush" Value="#d8e3e3"/>
    </Style>
    <!--#endregion-->

    <!--#region Datagrid -->
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="BorderBrush" Value="#F5F9F9"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="Background" Value="#F5F9F9"/>
        <Setter Property="RowBackground" Value="#F5F9F9"/>
        <Setter Property="AlternatingRowBackground" Value="#d8e3e3"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowHeight" Value="30"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridHeaderStyle}"/>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10,0,10,0"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#170e39"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridNumberCellStyle" TargetType="DataGridCell">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,10,0"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#170e39"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#F5F9F9" />
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>
    <!--#endregion-->

    <!--#region ListBox -->
    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#F5F9F9"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemContainer}"/>
    </Style>

    <Style x:Key="ListBoxItemContainer" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region TextStyles -->
    <Style x:Key="TextTitleStyles" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="FontFamily" Value="Consolas"/>
    </Style>

    <Style x:Key="RegularTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="FontFamily" Value="Consolas"/>
    </Style>
    <!--#endregion-->

    <!--#region Combobox -->
    <Style x:Key="ComboItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="Background" Value="#F5F9F9"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AllowDrop" Value="True"/>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="Background" Value="#F5F9F9"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="IsDropDownOpen" Value="False"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboItemStyle}"/>
    </Style>
    <!--#endregion-->

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="#170e39"/>
        <Setter Property="Background" Value="white"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="#80a0a2" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#d8e3e3" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="#80a0a2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="#FFFFFF" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="#170e39"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>